version: "3.7"

services:
  postgresdb:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=suuser
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: on-failure
    ports:
      - "5432:5432"

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

    volumes:
      - "rabbitmq_data:/data"

#  user_backend:
#    build:
#      context: ./user_backend
#      dockerfile: Dockerfile
#    ports:
#      - "1234:1234"
#    environment:
#      - POSTGRES_DB_HOST=postgresdb
#      - RABBITMQ_USER=user
#      - RABBITMQ_PASSWORD=password
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - postgresdb
#      - rabbitmq
#    restart: unless-stopped

  book_service:
    build:
      context: ./book_service
      dockerfile: Dockerfile
    ports:
      - "1235:1235"
    environment:
      - POSTGRES_DB_HOST=postgresdb
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped
    command:
      "entrypoint_service.sh"


  book_consumer:
    build:
      context: ./book_service
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB_HOST=postgresdb
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped
    command:
      "entrypoint_cons.sh"
#  issue_backend:
#    build:
#      context: ./issue_backend
#      dockerfile: Dockerfile
#    ports:
#      - "1236:1236"
#    environment:
#      - POSTGRES_DB_HOST=postgresdb
#      - RABBITMQ_USER=user
#      - RABBITMQ_PASSWORD=password
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - postgresdb
#      - rabbitmq
#    restart: unless-stopped
#
#
#
#  nginx:
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - user_backend
#      - book_backend
#      - issue_backend

volumes:
  rabbitmq_data: