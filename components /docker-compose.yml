version: "3.7"

services:
  postgresdb_books:
    build:
      context: ./postgres_books
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=suuser
    volumes:
      - ./postgres_books/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: on-failure
    ports:
      - "5432:5432"

  postgresdb_users:
    build:
      context: ./postgres_users
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=suuser
    volumes:
      - ./postgres_users/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: on-failure
    ports:
      - "5434:5432"

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

    volumes:
      - "rabbitmq_data:/data"

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    environment:
      - POSTGRES_DB_HOST=postgresdb_users
      - POSTGRES_DBNAME=usersdb
      - POSTGRES_USER=suuser
      - POSTGRES_PASSWORD=suuser
      - POSTGRES_PORT=5432
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgresdb_users
      - rabbitmq
    restart: unless-stopped
    command:
      "entrypoint_service.sh"

  user_consumer:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB_HOST=postgresdb_users
      - POSTGRES_DBNAME=usersdb
      - POSTGRES_USER=suuser
      - POSTGRES_PASSWORD=suuser
      - POSTGRES_PORT=5432
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgresdb_users
      - rabbitmq
    restart: unless-stopped
    command:
      "entrypoint_cons.sh"

  book_service:
    build:
      context: ./book_service
      dockerfile: Dockerfile
    ports:
      - "1235:1235"
    environment:
      - POSTGRES_DB_HOST=postgresdb_books
      - POSTGRES_DBNAME=booksdb
      - POSTGRES_USER=suuser
      - POSTGRES_PASSWORD=suuser
      - POSTGRES_PORT=5432
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgresdb_books
      - rabbitmq
    restart: unless-stopped
    command:
      "entrypoint_service.sh"


  book_consumer:
    build:
      context: ./book_service
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB_HOST=postgresdb_books
      - POSTGRES_DBNAME=booksdb
      - POSTGRES_USER=suuser
      - POSTGRES_PASSWORD=suuser
      - POSTGRES_PORT=5432
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgresdb_books
      - rabbitmq
    restart: unless-stopped
    command:
      "entrypoint_cons.sh"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - user_service
      - book_service


volumes:
  rabbitmq_data: